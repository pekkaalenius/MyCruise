''' 
This file contains routines for defining the area in which a given point is
The point is given as [longitude, latitude]
The area can be geographic named sea area, HELCOM area, economic zone, territorial water or within a baseline of a country

Baltic Sea area borders are from the book 
State and Evolution of the Baltic Sea, 1952 - 2005 
A Detailed 50-Year Survey of Meteorology and Climate, Physics, Chemistry, Biology, and Marine Environment 
Editors: Rainer Feistel, Gynther Nausch, Norbert Wasmund
Wiley 2008

Pekka Alenius 2021-05-07
'''
from math import pi, radians, cos, sin, asin, sqrt

BalticSeaAreas = [
    {'name': 'Bothnian Bay',           'basin': 'Gulf of Bothnia', 'fmicode': 'A', 'mccode': 1110, 'file': 'BothnianBay.csv',          'border': [[20.964, 64.457], [20.436, 65.131], [22.207, 66.099], [23.600, 66.136], [24.811, 66.186], [25.875, 65.664], [26.000, 65.000], [22.532, 63.212], [22.331, 63.466], [21.000, 63.800], [20.587, 63.803], [20.964, 64.457]]},
    {'name': 'The Quark',              'basin': 'Gulf of Bothnia', 'fmicode': 'B', 'mccode': 1120, 'file': 'Quark.csv',                'border': [[20.964, 64.457], [20.587, 63.803], [21.000, 63.800], [22.331, 63.466], [22.532, 63.212], [21.641, 62.746], [21.616, 63.095], [19.908, 63.623], [18.470, 63.628], [20.964, 64.457]]},
    {'name': 'Bothnian Sea',           'basin': 'Gulf of Bothnia', 'fmicode': 'C', 'mccode': 1130, 'file': 'BothnianSea.csv',          'border': [[18.196, 60.077], [17.912, 60.299], [17.140, 60.239], [16.724, 60.824], [16.840, 62.554], [18.470, 63.628], [19.908, 63.623], [21.616, 63.095], [21.641, 62.746], [22.000, 61.000], [21.407, 60.809], [19.582, 60.421], [19.617, 60.317], [19.475, 60.288], [18.917, 60.275], [18.550, 60.150], [18.196, 60.077]]},
    {'name': 'Ã…land Sea',              'basin': 'Gulf of Bothnia', 'fmicode': 'D', 'mccode': 1140, 'file': 'AlandSea.csv',             'border': [[18.196, 60.077], [18.550, 60.150], [18.917, 60.275], [19.475, 60.288], [19.617, 60.317], [19.967, 59.958], [21.025, 59.757], [20.017, 59.549], [19.400, 59.757], [19.056, 59.895], [18.196, 60.077]]},
    {'name': 'Archipelago Sea',        'basin': 'Gulf of Bothnia', 'fmicode': 'E', 'mccode': 1150, 'file': 'ArchipelagoSea.csv',       'border': [[19.617, 60.317], [19.582, 60.421], [21.407, 60.809], [22.000, 61.000], [22.893, 60.342], [23.153, 60.130], [22.886, 59.817], [21.325, 59.766], [21.025, 59.757], [19.967, 59.958], [19.617, 60.317]]},
    {'name': 'Gulf of Finland',        'basin': 'Gulf of Finland', 'fmicode': 'F', 'mccode': 1200, 'file': 'GulfFinland.csv',          'border': [[22.886, 59.817], [23.153, 60.130], [22.893, 60.342], [23.999, 60.329], [26.526, 60.719], [27.969, 60.773], [28.941, 60.881], [29.260, 60.336], [30.218, 60.233], [30.843, 59.963], [30.981, 59.586], [29.385, 59.726], [27.997, 59.176], [25.679, 59.403], [23.987, 58.941], [23.553, 59.222], [22.886, 59.817]]},
    {'name': 'Gulf of Riga',           'basin': 'Gulf of Riga',    'fmicode': 'G', 'mccode': 1300, 'file': 'GulfRiga.csv',             'border': [[22.266, 58.235], [22.406, 58.419], [22.578, 58.640], [22.593, 58.685], [22.602, 59.094], [23.553, 59.222], [23.987, 58.941], [24.722, 58.469], [24.747, 57.126], [24.129, 56.829], [22.967, 56.748], [22.398, 57.433], [21.711, 57.556], [22.076, 57.914], [22.156, 58.010], [22.223, 58.104], [22.266, 58.235]]},
    {'name': 'Northern Baltic Proper', 'basin': 'Baltic Proper',   'fmicode': 'H', 'mccode': 1410, 'file': 'NorthernBalticProper.csv', 'border': [[19.167, 58.433], [19.000, 58.500], [16.000, 58.817], [18.196, 60.077], [19.056, 59.895], [19.400, 59.757], [20.017, 59.549], [21.025, 59.757], [21.325, 59.766], [22.886, 59.817], [23.553, 59.222], [22.602, 59.094], [22.593, 58.685], [22.578, 58.640], [22.406, 58.419], [21.870, 58.380], [19.167, 58.433]]},
    {'name': 'Western Gotland Basin',  'basin': 'Baltic Proper',   'fmicode': 'I', 'mccode': 1421, 'file': 'WGotlandBasin.csv',        'border': [[15.785, 56.039], [16.000, 56.762], [16.000, 58.817], [19.000, 58.500], [19.167, 58.433], [19.267, 58.333], [19.167, 58.000], [18.167, 56.917], [18.150, 56.183], [16.400, 56.200], [15.785, 56.039]]},
    {'name': 'Eastern Gotland Basin',  'basin': 'Baltic Proper',   'fmicode': 'K', 'mccode': 1422, 'file': 'EGotlandBasin.csv',        'border': [[18.150, 56.183], [18.167, 56.917], [19.167, 58.000], [19.267, 58.333], [19.167, 58.433], [21.870, 58.380], [22.406, 58.419], [22.266, 58.235], [22.223, 58.104], [22.156, 58.010], [22.076, 57.914], [21.711, 57.556], [21.430, 56.150], [18.150, 56.183]]},
    {'name': 'Southern Baltic Proper', 'basin': 'Baltic Proper',   'fmicode': 'L', 'mccode': 1430, 'file': 'SouthernBalticProper.csv', 'border': [[17.912, 54.488], [15.326, 53.966], [14.370, 53.422], [12.925, 54.185], [12.507, 54.476], [11.955, 54.564], [11.950, 54.750], [11.910, 54.861], [11.885, 55.220], [11.998, 55.460], [12.458, 55.290], [12.816, 55.383], [13.095, 55.435], [13.253, 55.584], [13.800, 55.511], [13.800, 56.014], [16.000, 56.762], [15.785, 56.039], [16.400, 56.200], [18.150, 56.183], [21.430, 56.150], [21.368, 55.809], [21.711, 55.003], [20.707, 54.644], [19.056, 54.047]]},
    {'name': 'Arkona Sea',             'basin': 'Baltic Proper',   'fmicode': 'L', 'mccode': 1431, 'file': 'ArkonaSea.csv',            'border': [[12.925, 54.185], [12.507, 54.476], [11.955, 54.564], [11.950, 54.750], [11.910, 54.861], [11.885, 55.220], [11.998, 55.460], [12.458, 55.290], [12.816, 55.383], [13.095, 55.435], [13.253, 55.584], [13.800, 55.511], [14.200, 55.400], [14.767, 55.300], [15.100, 55.000], [14.400, 54.700], [14.250, 53.917], [14.370, 53.422], [12.925, 54.185]]},
    {'name': 'Bornholm Sea',           'basin': 'Baltic Proper',   'fmicode': 'L', 'mccode': 1432, 'file': 'BornholmSea.csv',          'border': [[14.370, 53.422], [14.250, 53.917], [14.400, 54.700], [15.100, 55.000], [14.767, 55.300], [14.200, 55.400], [13.253, 55.584], [13.800, 55.511], [13.800, 56.014], [16.000, 56.762], [15.785, 56.039], [16.400, 56.200], [18.150, 56.183], [17.300, 55.467], [16.867, 54.567], [17.912, 54.488], [15.326, 53.966]]},
    {'name': 'Bay of Gdansk',          'basin': 'Baltic Proper',   'fmicode': 'M', 'mccode': 1431, 'file': 'GulfGdansk.csv',           'border': [[17.912, 54.488], [18.330, 54.830], [20.000, 54.950], [20.707, 54.644], [19.056, 54.047]]},
    {'name': 'Bay of Mecklenburg',     'basin': 'Belt Sea',        'fmicode': 'N', 'mccode': 2100, 'file': 'MecklenburgBay.csv',       'border': [[10.663, 54.167], [11.073, 54.370], [11.180, 54.442], [11.214, 54.504], [11.468, 54.614], [11.550, 54.750], [11.950, 54.750], [11.955, 54.564], [12.507, 54.476], [12.925, 54.185], [10.852, 53.587], [ 9.958, 53.677], [10.663, 54.167]]},
    {'name': 'Kiel Bay',               'basin': 'Belt Sea',        'fmicode': 'O', 'mccode': 2200, 'file': 'KielBay.csv',              'border': [[ 9.306, 54.577], [ 9.986, 54.772], [10.293, 54.804], [10.424, 54.824], [10.694, 54.720], [11.003, 54.769], [11.295, 54.727], [11.468, 54.614], [11.214, 54.504], [11.180, 54.442], [11.073, 54.370], [10.663, 54.167], [ 9.958, 53.677], [ 9.306, 54.577]]},
    {'name': 'Little Belt',            'basin': 'Belt Sea',        'fmicode': 'P', 'mccode': 2300, 'file': 'LittleBelt.csv',           'border': [[10.424, 54.824], [10.293, 54.804], [ 9.986, 54.772], [ 9.306, 54.577], [ 9.290, 54.936], [ 9.267, 55.263], [ 8.923, 56.012], [ 9.301, 55.850], [ 9.486, 55.888], [10.031, 55.704], [10.183, 55.641], [10.421, 55.420], [10.424, 54.824]]},
    {'name': 'Great Belt',             'basin': 'Belt Sea',        'fmicode': 'Q', 'mccode': 2400, 'file': 'GreatBelt.csv',            'border': [[10.413, 56.347], [10.697, 56.293], [10.714, 56.142], [11.278, 56.010], [12.305, 56.120], [12.301, 55.851], [11.998, 55.460], [11.885, 55.220], [11.910, 54.861], [11.950, 54.750], [11.550, 54.750], [11.468, 54.614], [11.295, 54.727], [11.003, 54.769], [10.694, 54.720], [10.424, 54.824], [10.421, 55.420], [10.183, 55.641], [10.031, 55.704], [ 9.486, 55.888], [ 9.301, 55.850], [ 8.923, 56.012], [ 8.972, 56.356], [10.413, 56.347]]},
    {'name': 'The Sound',              'basin': 'The Sound',       'fmicode': 'R', 'mccode': 3000, 'file': 'Sound.csv',                'border': [[13.253, 55.584], [13.095, 55.435], [12.816, 55.383], [12.458, 55.290], [11.998, 55.460], [12.301, 55.851], [12.305, 56.120], [12.468, 56.304], [12.861, 56.151], [13.253, 55.584]]},
    {'name': 'Kattegat',               'basin': 'Belt Sea',        'fmicode': 'S', 'mccode': 4000, 'file': 'Kattegat.csv',             'border': [[12.305, 56.120], [11.278, 56.010], [10.714, 56.142], [10.697, 56.293], [10.413, 56.347], [ 8.972, 56.356], [ 9.000, 56.825], [10.636, 57.737], [12.250, 57.750], [13.268, 56.614], [12.861, 56.151], [12.468, 56.304], [12.305, 56.120]]},
    {'name': 'Skagerrak',              'basin': 'Skagerrak',       'fmicode': 'T', 'mccode': 5000, 'file': 'Skagerrak.csv',            'border': [[ 7.050, 57.982], [ 7.050, 58.723], [ 7.729, 58.676], [ 9.199, 59.253], [10.399, 60.149], [11.202, 59.941], [11.661, 58.876], [12.250, 57.750], [10.636, 57.737], [ 9.000, 56.825], [ 8.611, 57.122], [ 7.050, 57.982]]}
]

BalticSeaMainAreas = [
    {'basin': 'Baltic Sea',            'file': 'BalticSea.csv',            'border': [[13.800, 55.511],[13.800, 56.014],[16.000, 56.762],[15.999, 58.817],[18.196, 60.077],[17.912, 60.299],[17.140, 60.239],[16.724, 60.824],[16.840, 62.554],[18.470, 63.628],[20.964, 64.457],[20.436, 65.131],[22.207, 66.099],[23.600, 66.136 ],[24.811, 66.186],[25.875, 65.664],[26.000, 65.000],[22.532, 63.212],[21.641, 62.746],[22.000, 61.000],[22.893, 60.342],[23.999, 60.329],[26.526, 60.719],[27.969, 60.773],[28.941, 60.881],[29.260, 60.336],[30.218, 60.233],[30.843, 59.963],[30.981, 59.586],[29.385, 59.726],[27.997, 59.176],[25.679, 59.403],[23.987, 58.941],[24.722, 58.469],[24.747, 57.126],[24.129, 56.829],[22.967, 56.748],[22.398, 57.433],[21.711, 57.556],[21.368, 55.809],[21.711, 55.003],[19.056, 54.047],[17.912, 54.488],[15.326, 53.966],[14.370, 53.422],[12.925, 54.185],[10.852, 53.587],[ 9.958, 53.677],[ 9.306, 54.577],[ 9.290, 54.936],[ 9.267, 55.263],[ 8.923, 56.012],[ 8.972, 56.356],[ 9.000, 56.825],[ 8.611, 57.122],[ 7.050, 57.982],[ 7.050, 58.723],[ 7.729, 58.676],[ 9.199, 59.253],[10.399, 60.149],[11.202, 59.941],[11.661, 58.876],[12.250, 57.750],[13.268, 56.614],[12.861, 56.151],[13.253, 55.584]]},
    {'basin': 'Baltic Proper',         'file': 'BalticProper.csv',         'border': [[12.925, 54.185],[12.507, 54.476],[11.955, 54.564],[11.950, 54.750],[11.910, 54.861],[11.885, 55.220],[11.998, 55.460],[12.458, 55.290],[12.816, 55.383],[13.095, 55.435],[13.253, 55.584],[13.800, 55.511],[13.800, 56.014],[16.000, 56.762],[16.000, 58.817],[18.196, 60.077],[19.056, 59.895],[19.400, 59.757],[20.017, 59.549],[21.025, 59.757],[21.325, 59.766],[22.886, 59.817],[23.553, 59.222],[22.602, 59.094],[22.593, 58.685],[22.578, 58.640],[22.406, 58.419],[22.266, 58.235],[22.223, 58.104],[22.156, 58.010],[22.076, 57.914],[21.711, 57.556],[21.430, 56.150],[21.368, 55.809],[21.711, 55.003],[20.707, 54.644],[19.056, 54.047],[17.912, 54.488],[15.326, 53.966],[14.370, 53.422],[12.925, 54.185]]},
    {'basin': 'Belt Sea',              'file': 'BeltSea.csv',              'border': [[ 8.923, 56.012],[ 8.972, 56.356],[10.413, 56.347],[10.697, 56.293],[10.714, 56.142],[11.278, 56.010],[12.305, 56.120],[12.301, 55.851],[11.998, 55.460],[11.885, 55.220],[11.910, 54.861],[11.950, 54.750],[11.955, 54.564],[12.507, 54.476],[12.925, 54.185],[10.852, 53.587],[ 9.958, 53.677],[ 9.306, 54.577],[ 9.290, 54.936],[ 9.267, 55.263],[ 8.923, 56.012]]},
    {'basin': 'Southern Gotland Basin','file': 'SouthernGotlandBasin.csv', 'border': [[17.912, 54.488],[16.867, 54.567],[17.300, 55.467],[18.150, 56.183],[21.430, 56.150],[21.368, 55.809],[21.711, 55.003],[20.707, 54.644],[20.000, 54.950],[18.330, 54.830],[17.912, 54.488]]},
    {'basin': 'Central Baltic Proper', 'file': 'CentralBalticProper.csv',  'border': [[15.785, 56.039],[16.000, 56.762],[16.000, 58.817],[19.000, 58.500],[19.167, 58.433],[21.870, 58.380],[22.406, 58.419],[22.266, 58.235],[22.223, 58.104],[22.156, 58.010],[22.076, 57.914],[21.711, 57.556],[21.430, 56.150],[18.150, 56.183],[16.400, 56.200],[15.785, 56.039]]},
    {'basin': 'Gulf of Bothnia',       'file': 'GulfBothnia.csv',          'border': [[19.056, 59.895],[18.196, 60.077],[17.912, 60.299],[17.140, 60.239],[16.724, 60.824],[16.840, 62.554],[18.470, 63.628],[20.964, 64.457],[20.436, 65.131],[22.207, 66.099],[23.600, 66.136],[24.811, 66.186],[25.875, 65.664],[26.000, 65.000],[22.532, 63.212],[21.641, 62.746],[22.000, 61.000],[22.893, 60.342],[23.153, 60.130],[22.886, 59.817],[21.325, 59.766],[21.025, 59.757],[20.017, 59.549],[19.400, 59.757],[19.056, 59.895]]},
    {'basin': 'Gulf of Finland',       'file': 'GulfFinland.csv',          'border': [[22.886, 59.817],[23.153, 60.130],[22.893, 60.342],[23.999, 60.329],[26.526, 60.719],[27.969, 60.773],[28.941, 60.881],[29.260, 60.336],[30.218, 60.233],[30.843, 59.963],[30.981, 59.586],[29.385, 59.726],[27.997, 59.176],[25.679, 59.403],[23.987, 58.941],[23.553, 59.222],[22.886, 59.817]]},
    {'basin': 'Gulf of Riga',          'file': 'GulfRiga.csv',             'border': [[22.266, 58.235],[22.406, 58.419],[22.578, 58.640],[22.593, 58.685],[22.602, 59.094],[23.553, 59.222],[23.987, 58.941],[24.722, 58.469],[24.747, 57.126],[24.129, 56.829],[22.967, 56.748],[22.398, 57.433],[21.711, 57.556],[22.076, 57.914],[22.156, 58.010],[22.223, 58.104],[22.266, 58.235]]}]

economiczones = [
    {'name': 'Denmark',    'ISOcode': 'DK', 'mccode': 126000, 'bordertype': 'E', 'border': [[3.25, 56.08667],[5.03333, 56.59167],[6.93667, 57.175],[7.98333, 57.49833],[8.45833, 57.61833],[8.88833, 57.69667],[9.38333, 57.98833],[10.03, 58.2615],[10.5425, 58.13333],[11.04883, 57.81683],[11.39933, 57.45],[12.14783, 56.509],[12.08767, 56.30383],[12.36333, 56.21633],[12.667, 56.03617],[12.64117, 55.93467],[12.71883, 55.84367],[12.855, 55.749],[12.8745, 55.7235],[12.8745, 55.57333],[12.62167, 55.4155],[12.642, 55.33733],[12.63883, 55.30833],[12.67717, 55.25],[12.79483, 55.16667],[13.0555, 55.065],[13.14583, 55.00983],[13.14817, 55.00833],[12.934, 54.83383],[12.75, 54.76383],[12.44333, 54.68767],[12.112, 54.41117],[11.9405, 54.36683],[11.67067, 54.36483],[11.67233, 54.36583],[11.63667, 54.39333],[11.582, 54.43],[11.51383, 54.46483],[11.4435, 54.49817],[11.38467, 54.5325],[11.3215, 54.56983],[11.26017, 54.5865],[11.2085, 54.60917],[11.15783, 54.62217],[11.075, 54.63783],[11.00583, 54.64117],[10.90433, 54.63733],[10.87367, 54.6195],[10.8005, 54.58117],[10.733, 54.547],[10.66033, 54.54433],[10.61383, 54.55167],[10.533, 54.577],[10.4545, 54.59917],[10.37433, 54.621],[10.35517, 54.63333],[10.30833, 54.67483],[10.26883, 54.71383],[10.21833, 54.75667],[10.0, 54.83333],[9.33333, 54.83333],[8.302, 55.064],[7.55267, 55.16767],[5.75, 55.51117],[5.40333, 55.25],[5.15, 55.25],[4.75, 55.40417],[4.25, 55.77267],[3.35, 55.91933],[3.25, 56.08667]]},
    {'name': 'Bornholm',   'ISOcode': 'DK', 'mccode': 126100, 'bordertype': 'E', 'border': [[13.9945, 54.96367],[14.46, 55.31217],[15.04283, 55.6915],[16.50833, 55.35517],[16.505, 55.35317],[15.53333, 55.21667],[15.5, 54.91667],[15.33333, 54.8],[15.16667, 54.75],[14.73333, 54.73333],[14.63667, 54.53617],[14.41417, 54.65833],[14.41417, 54.8125],[14.17283, 54.8125],[13.99283, 54.9625]]},
    {'name': 'Estonia',    'ISOcode': 'EE', 'mccode': 191000, 'bordertype': 'E', 'border': [[28.09783, 59.5695],[26.915, 59.63167],[26.44, 59.93833],[26.33583, 59.99467],[26.21117, 59.98483],[26.13283, 59.96833],[25.96783, 59.8615],[25.4595, 59.8765],[25.1695, 59.88817],[24.95283, 59.86817],[24.82117, 59.8415],[24.40617, 59.7365],[23.90617, 59.61817],[23.4945, 59.5265],[23.1595, 59.52817],[22.75117, 59.41483],[22.1645, 59.37983],[21.77617, 59.3115],[21.18617, 59.1915],[20.48167, 58.84467],[20.47783, 58.78067],[20.44317, 58.48333],[20.375, 58.2],[20.3985, 58.03217],[21.84283, 57.763],[21.91617, 57.7495],[22.14333, 57.77917],[22.58367, 57.92733],[22.7075, 57.94083],[22.90767, 57.7805],[22.99917, 57.70217],[23.18083, 57.58633],[23.406, 57.59383],[23.58233, 57.6695],[23.6485, 57.78283],[23.60117, 57.89917],[24.2095, 57.89917],[24.26117, 57.91717],[24.35683, 57.8745],[28.09867, 57.89983]]},
    {'name': 'Finland',    'ISOcode': 'FI', 'mccode': 134000, 'bordertype': 'E', 'border': [[27.79583, 60.5455],[27.77367, 60.53333],[27.77567, 60.50733],[27.7675, 60.50367],[27.764, 60.49533],[27.76733, 60.48883],[27.75567, 60.4715],[27.74733, 60.46883],[27.74717, 60.45083],[27.6935, 60.43717],[27.68617, 60.43333],[27.725, 60.39133],[27.6165, 60.32433],[27.50383, 60.25433],[27.66883, 60.35683],[27.585, 60.30483],[27.5445, 60.27967],[27.512, 60.25967],[27.46383, 60.22833],[27.30033, 60.20533],[27.23033, 60.20533],[27.18833, 60.17667],[26.965, 60.17667],[26.915, 60.17333],[26.79833, 60.14667],[26.64, 60.11333],[26.54333, 60.10667],[26.34667, 60.0],[26.33583, 59.99467],[26.21117, 59.98483],[26.13283, 59.96833],[25.96783, 59.8615],[25.4595, 59.8765],[25.1695, 59.88817],[24.95283, 59.86817],[24.82117, 59.8415],[24.40617, 59.7365],[23.90617, 59.61817],[23.4945, 59.5265],[23.1595, 59.52817],[22.75117, 59.41483],[22.1645, 59.37983],[21.77617, 59.3115],[21.18617, 59.1915],[20.48167, 58.84467],[20.15333, 59.445],[19.65833, 59.79167],[19.08317, 60.19167],[19.10267, 60.23533],[19.15833, 60.37167],[19.235, 60.67833],[19.525, 62.7],[20.4, 63.33333],[20.69667, 63.485],[20.94, 63.52167],[21.28, 63.61],[21.37833, 63.635],[21.5, 63.66667],[23.91667, 65.36333],[24.05333, 65.45833],[24.13667, 65.515],[24.14, 65.53],[24.15833, 65.86667],[27.79583, 65.86667]]},
    {'name': 'Germany',    'ISOcode': 'DE', 'mccode': 106000, 'bordertype': 'E', 'border': [[9.33333, 53.75],[9.33333, 54.83333],[10.0, 54.83333],[10.21833, 54.75667],[10.26883, 54.71383],[10.30833, 54.67483],[10.35517, 54.63333],[10.37433, 54.621],[10.4545, 54.59917],[10.533, 54.577],[10.61383, 54.55167],[10.66033, 54.54433],[10.733, 54.547],[10.8005, 54.58117],[10.87367, 54.6195],[10.90433, 54.63733],[11.00583, 54.64117],[11.075, 54.63783],[11.15783, 54.62217],[11.2085, 54.60917],[11.26017, 54.5865],[11.3215, 54.56983],[11.38467, 54.5325],[11.4435, 54.49817],[11.51383, 54.46483],[11.582, 54.43],[11.63667, 54.39333],[11.67233, 54.36583],[11.67067, 54.36483],[11.9405, 54.36683],[12.112, 54.41117],[12.44333, 54.68767],[12.75, 54.76383],[12.934, 54.83383],[13.14817, 55.00833],[13.1575, 55.0105],[13.78567, 55.02133],[13.9875, 54.965],[13.99283, 54.9625],[14.17283, 54.8125],[14.41417, 54.8125],[14.41417, 54.65833],[14.63667, 54.53617],[14.62833, 54.53267],[14.74917, 54.499],[14.59883, 54.38233],[14.35133, 54.168],[14.23867, 54.12633],[14.2025, 54.12683],[14.18333, 54.1],[14.25, 53.75]]},
    {'name': 'Latvia',     'ISOcode': 'LV', 'mccode': 192000, 'bordertype': 'E', 'border': [[20.3985, 58.03217],[21.84283, 57.763],[21.91617, 57.7495],[22.14333, 57.77917],[22.58367, 57.92733],[22.7075, 57.94083],[22.90767, 57.7805],[22.99917, 57.70217],[23.18083, 57.58633],[23.406, 57.59383],[23.58233, 57.6695],[23.6485, 57.78283],[23.60117, 57.89917],[24.2095, 57.89917],[24.26117, 57.91717],[24.35683, 57.8745],[24.5, 57.89983],[24.5, 56.08333],[21.03333, 56.08333],[19.19367, 56.19817],[19.226, 56.25],[19.35117, 56.45],[19.41783, 56.58333],[19.52867, 56.75],[19.67117, 56.96667],[19.89283, 57.2365],[20.036, 57.44533],[20.06617, 57.56333],[20.23567, 57.73333],[20.41533, 57.9115]]},
    {'name': 'Lithuania',  'ISOcode': 'LT', 'mccode': 193000, 'bordertype': 'E', 'border': [[21.03333, 56.08333],[19.19367, 56.19817],[19.0945, 56.0405],[19.08133, 55.981],[19.0945, 56.0405],[19.08133, 55.981],[19.0675, 55.955],[19.04683, 55.92367],[19.9245, 55.63617],[20.65383, 55.384],[20.95, 55.26667],[21.5, 55.26667],[21.5, 56.08333]]},
    {'name': 'Poland',     'ISOcode': 'PL', 'mccode': 166000, 'bordertype': 'E', 'border': [[20.0, 54.43833],[19.56167, 54.43833],[19.315, 54.67],[19.345, 54.815],[19.06333, 55.34667],[18.93667, 55.85],[18.92583, 55.87983],[18.9, 55.88133],[18.36333, 55.9215],[18.0, 55.78317],[17.378, 55.58733],[17.0, 55.5],[16.53333, 55.36067],[16.505, 55.35317],[15.53333, 55.21667],[15.5, 54.91667],[14.62917, 54.53367],[14.75, 54.5],[14.59967, 54.38333],[14.35217, 54.16883],[14.23933, 54.12733],[14.20333, 54.12767],[14.24417, 53.98933],[14.228, 53.92933],[20.0, 53.8]]},
    {'name': 'Russia',     'ISOcode': 'RU', 'mccode': 190000, 'bordertype': 'E', 'border': [[27.79583, 60.5455],[27.77367, 60.53333],[27.77567, 60.50733],[27.7675, 60.50367],[27.764, 60.49533],[27.76733, 60.48883],[27.75567, 60.4715],[27.74733, 60.46883],[27.74717, 60.45083],[27.6935, 60.43717],[27.68617, 60.43333],[27.725, 60.39133],[27.6165, 60.32433],[27.50383, 60.25433],[27.66883, 60.35683],[27.585, 60.30483],[27.5445, 60.27967],[27.512, 60.25967],[27.46383, 60.22833],[27.30033, 60.20533],[27.23033, 60.20533],[27.18833, 60.17667],[26.965, 60.17667],[26.915, 60.17333],[26.79833, 60.14667],[26.64, 60.11333],[26.54333, 60.10667],[26.34667, 60.0],[26.33583, 59.99467],[26.44, 59.93833],[26.915, 59.63167],[28.09783, 59.5695],[30.36667, 59.56917],[30.36667, 60.77],[27.79583, 60.77]]},
    {'name': 'Kaliningrad','ISOcode': 'RU', 'mccode': 190100, 'bordertype': 'E', 'border': [[21.5, 55.26667],[20.95, 55.26667],[20.65383, 55.384],[19.9245, 55.63617],[19.04683, 55.92367],[18.94633, 55.89133],[18.92583, 55.87983],[18.93667, 55.85],[19.06333, 55.34667],[19.345, 54.815],[19.315, 54.67],[19.56167, 54.43833],[20.0, 54.43833],[21.5, 54.43833]]},
    {'name': 'Sweden',     'ISOcode': 'SE', 'mccode': 177000, 'bordertype': 'E', 'border': [[11.20433, 59.088],[10.5945, 58.7615],[10.14633, 58.5115],[10.03, 58.2615],[10.5425, 58.13333],[11.04883, 57.81683],[11.39933, 57.45],[12.14783, 56.509],[12.08767, 56.30383],[12.36333, 56.21633],[12.667, 56.03617],[12.64117, 55.93467],[12.71883, 55.84367],[12.855, 55.749],[12.8745, 55.7235],[12.8745, 55.57333],[12.62167, 55.4155],[12.63917, 55.33733],[12.63883, 55.30833],[12.67717, 55.25],[12.79483, 55.16667],[13.0555, 55.065],[13.14583, 55.00983],[13.15717, 55.01],[13.7855, 55.02083],[13.9875, 54.9645],[13.9945, 54.96367],[14.46, 55.31217],[15.04283, 55.6915],[16.50833, 55.35517],[16.53333, 55.36067],[17.0, 55.5],[17.378, 55.58733],[18.0, 55.78317],[18.36333, 55.9215],[18.9, 55.88133],[18.92583, 55.87983],[18.92933, 55.87983],[18.94633, 55.89133],[19.0675, 55.955],[19.08133, 55.981],[19.0945, 56.0405],[19.226, 56.25],[19.35117, 56.45],[19.41783, 56.58333],[19.52867, 56.75],[19.67117, 56.96667],[19.89283, 57.2365],[20.036, 57.44533],[20.06617, 57.56333],[20.23567, 57.73333],[20.41533, 57.9115],[20.375, 58.2],[20.44317, 58.48333],[20.47783, 58.78067],[20.47133, 58.863],[20.15333, 59.445],[19.65833, 59.79167],[19.08317, 60.19167],[19.10267, 60.23533],[19.15833, 60.37167],[19.21667, 60.61],[19.235, 60.67833],[19.525, 62.7],[20.4, 63.33333],[20.69667, 63.485],[20.94, 63.52167],[21.28, 63.61],[21.37833, 63.635],[21.5, 63.66667],[23.91667, 65.36333],[24.05333, 65.45833],[24.13667, 65.515],[24.14, 65.53],[24.15833, 65.91667],[21.0, 65.91667],[10.59, 58.75683]]}]

territorialwaters = [
    {'name': 'Denmark',             'ISOcode': 'DK', 'mccode': 126000, 'bordertype': 'T', 'border': [[3.25, 56.08667],[5.03333, 56.59167],[6.93667, 57.175],[7.98333, 57.49833],[8.45833, 57.61833],[8.88833, 57.69667],[9.38333, 57.98833],[10.03, 58.2615],[10.5425, 58.13333],[11.04883, 57.81683],[11.39933, 57.45],[12.14783, 56.509],[12.08767, 56.30383],[12.36333, 56.21633],[12.667, 56.03617],[12.64117, 55.93467],[12.71883, 55.84367],[12.855, 55.749],[12.8745, 55.7235],[12.8745, 55.57333],[12.62167, 55.4155],[12.642, 55.33733],[12.63883, 55.30833],[12.67717, 55.25],[12.79483, 55.16667],[13.0555, 55.065],[13.14583, 55.00983],[13.14817, 55.00833],[12.934, 54.83383],[12.75, 54.76383],[12.44333, 54.68767],[12.112, 54.41117],[11.9405, 54.36683],[11.67067, 54.36483],[11.67233, 54.36583],[11.63667, 54.39333],[11.582, 54.43],[11.51383, 54.46483],[11.4435, 54.49817],[11.38467, 54.5325],[11.3215, 54.56983],[11.26017, 54.5865],[11.2085, 54.60917],[11.15783, 54.62217],[11.075, 54.63783],[11.00583, 54.64117],[10.90433, 54.63733],[10.87367, 54.6195],[10.8005, 54.58117],[10.733, 54.547],[10.66033, 54.54433],[10.61383, 54.55167],[10.533, 54.577],[10.4545, 54.59917],[10.37433, 54.621],[10.35517, 54.63333],[10.30833, 54.67483],[10.26883, 54.71383],[10.21833, 54.75667],[10.0, 54.83333],[9.33333, 54.83333],[8.302, 55.064],[7.55267, 55.16767],[5.75, 55.51117],[5.40333, 55.25],[5.15, 55.25],[4.75, 55.40417],[4.25, 55.77267],[3.35, 55.91933],[3.25, 56.08667]]},
    {'name': 'Bornholm, Denmark',   'ISOcode': 'DK', 'mccode': 126100, 'bordertype': 'T', 'border': [[14.833, 54.83067],[14.81083, 54.83283],[14.78217, 54.83633],[14.75783, 54.84033],[14.727, 54.84633],[14.695, 54.8535],[14.66783, 54.86117],[14.64067, 54.86983],[14.62983, 54.8735],[14.62267, 54.876],[14.59317, 54.88683],[14.58917, 54.88833],[14.58867, 54.8885],[14.56817, 54.89617],[14.51567, 54.92067],[14.4745, 54.94833],[14.4575, 54.96233],[14.42833, 54.99083],[14.40883, 55.0195],[14.39983, 55.0365],[14.3965, 55.04317],[14.3935, 55.04983],[14.38733, 55.06533],[14.37867, 55.10367],[14.38183, 55.13767],[14.38167, 55.14033],[14.382, 55.147],[14.37867, 55.16783],[14.3775, 55.18883],[14.37917, 55.205],[14.3835, 55.22767],[14.38717, 55.243],[14.39017, 55.25133],[14.3955, 55.26383],[14.46, 55.31217],[14.7105, 55.4755],[14.85283, 55.48833],[14.92867, 55.46967],[14.95017, 55.48667],[15.12883, 55.529],[15.28, 55.5235],[15.39767, 55.4855],[15.4035, 55.483],[15.4325, 55.469],[15.45867, 55.45333],[15.4595, 55.45283],[15.46433, 55.44967],[15.469, 55.44633],[15.475, 55.44183],[15.54283, 55.357],[15.53567, 55.26383],[15.53533, 55.26333],[15.49433, 55.21733],[15.50367, 55.2075],[15.50817, 55.2005],[15.526, 55.15],[15.50983, 55.00483],[15.503, 54.99467],[15.49767, 54.98733],[15.492, 54.98017],[15.48233, 54.96883],[15.47967, 54.96567],[15.47883, 54.96467],[15.4695, 54.95433],[15.458, 54.94133],[15.45783, 54.94117],[15.45767, 54.941],[15.32783, 54.831],[15.1055, 54.79117],[15.08317, 54.79167],[15.03433, 54.79483],[14.9485, 54.80633],[14.9425, 54.80767],[14.94017, 54.808],[14.94167, 54.80783],[14.92517, 54.811]]},
    {'name': 'Estonia',             'ISOcode': 'EE', 'mccode': 191000, 'bordertype': 'T', 'border': [[28.09783, 59.5695],[26.915, 59.63167],[26.44, 59.93833],[26.15333, 59.9],[26.02167, 59.815],[25.57833, 59.82667],[24.48167, 59.70333],[23.95333, 59.57667],[23.52167, 59.48167],[23.19167, 59.48333],[23.14333, 59.47],[23.10833, 59.45667],[22.73333, 59.29167],[22.60333, 59.295],[22.39833, 59.27],[22.30833, 59.245],[21.85, 59.05667],[21.65167, 58.91833],[21.69667, 58.83167],[21.60667, 58.68833],[21.42167, 58.53667],[21.38667, 58.35167],[21.40333, 58.25667],[21.61333, 57.895],[21.64667, 57.85667],[21.71667, 57.78667],[21.89333, 57.755],[22.72167, 57.915],[23.18333, 57.58333],[23.36833, 57.58667],[23.51, 57.625],[23.94333, 57.82],[23.955, 57.81167],[24.30333, 57.9],[24.35783, 57.87467]]},
    {'name': 'Finland',             'ISOcode': 'FI', 'mccode': 134000, 'bordertype': 'T', 'border': [[26.74467, 60.189],[26.614, 60.1615],[26.495, 60.15333],[26.29783, 60.04633],[26.19167, 60.038],[26.07817, 60.01383],[26.02033, 59.97667],[25.62333, 59.93183],[25.58583, 59.928],[25.47433, 59.93117],[25.1725, 59.94333],[24.93317, 59.92117],[24.7885, 59.89183],[24.4915, 59.81683],[24.33533, 59.79667],[24.20917, 59.7835],[23.35517, 59.65683],[22.86067, 59.6355],[22.63783, 59.60783],[22.39983, 59.513],[21.53683, 59.47633],[21.43783, 59.48267],[20.76417, 59.5325],[20.38717, 59.45767],[20.28767, 59.466],[19.99783, 59.59117],[19.944, 59.595],[19.66167, 59.79167],[19.08667, 60.19167],[19.10617, 60.23517],[19.16467, 60.37483],[19.22367, 60.6115],[19.23717, 60.6145],[19.549, 60.68117],[19.639, 60.69433],[20.02867, 60.7275],[20.441, 60.90167],[20.775, 61.12683],[20.85767, 61.44683],[20.90667, 61.64617],[20.815, 61.98683],[20.6685, 62.366],[20.42217, 62.72433],[20.41583, 62.73467],[20.3145, 62.91133],[20.16967, 63.16467],[20.40483, 63.33167],[20.70017, 63.48267],[20.9425, 63.51917],[21.513, 63.66683],[21.66367, 63.672],[21.88833, 63.701],[22.12383, 63.84733],[22.202, 63.9365],[22.22783, 63.96083],[22.25883, 63.9855],[22.273, 63.99617],[22.29167, 64.00917],[22.34367, 64.04217],[22.42733, 64.08217],[22.45883, 64.0935],[22.5355, 64.11917],[22.6005, 64.13717],[22.965, 64.21983],[22.98883, 64.3495],[23.20983, 64.504],[23.83967, 64.66517],[23.8665, 64.72183],[23.87233, 64.73267],[24.08767, 65.07983],[24.15833, 65.29217],[24.137, 65.51233]]},
    {'name': 'Germany',             'ISOcode': 'DE', 'mccode': 106000, 'bordertype': 'T', 'border': [[10.1705, 54.738],[10.22, 54.69617],[10.2595, 54.6575],[10.31, 54.6125],[10.34, 54.593],[10.42967, 54.56883],[10.50667, 54.5475],[10.59333, 54.5205],[10.65333, 54.51083],[10.73917, 54.51417],[10.82117, 54.54717],[10.98083, 54.55583],[11.002, 54.5695],[11.1425, 54.577],[11.20633, 54.55867],[11.31217, 54.5295],[11.323, 54.51283],[11.35083, 54.505],[11.40367, 54.47383],[11.47617, 54.43967],[11.5395, 54.4075],[11.58967, 54.37367],[11.6455, 54.33133],[11.95283, 54.33367],[12.15367, 54.38533],[12.16633, 54.38533],[12.25967, 54.45117],[12.30133, 54.51167],[12.29333, 54.518],[12.32333, 54.57783],[12.75, 54.74383],[13.0, 54.80233],[13.33333, 54.875],[13.41667, 54.88533],[13.65, 54.85],[13.98333, 54.68333],[14.0795, 54.44183],[14.07083, 54.27083],[14.16917, 54.2395],[14.2025, 54.12683],[14.24333, 53.98833],[14.22717, 53.92833]]},
    {'name': 'Latvia',              'ISOcode': 'LV', 'mccode': 192000, 'bordertype': 'T', 'border': [[24.35683, 57.8745],[24.26117, 57.91717],[24.2095, 57.89917],[23.60117, 57.89917],[23.6485, 57.78283],[23.58233, 57.6695],[23.406, 57.59383],[23.18083, 57.58633],[22.99917, 57.70217],[22.90767, 57.7805],[22.7075, 57.94083],[22.58367, 57.92733],[22.14333, 57.77917],[21.91617, 57.7495],[21.84283, 57.763],[21.91467, 57.749],[21.73767, 57.7825],[21.71933, 57.77867],[21.63983, 57.76067],[21.57, 57.7335],[21.51617, 57.707],[21.44633, 57.664],[21.368, 57.599],[21.3155, 57.57117],[21.26517, 57.53783],[21.19583, 57.47267],[21.13983, 57.43183],[21.097, 57.3875],[21.07533, 57.33667],[21.06, 57.27017],[21.047, 57.22283],[21.048, 57.16],[21.04983, 57.14133],[21.01317, 57.09333],[20.9375, 57.046],[20.861, 57.01233],[20.81233, 56.97833],[20.77917, 56.95133],[20.74967, 56.92433],[20.72317, 56.88517],[20.7005, 56.83983],[20.69233, 56.808],[20.68883, 56.775],[20.69033, 56.753],[20.67533, 56.69583],[20.66017, 56.658],[20.645, 56.6105],[20.63917, 56.5745],[20.63283, 56.55883],[20.6245, 56.52],[20.62833, 56.4805],[20.6325, 56.45783],[20.62083, 56.435],[20.61333, 56.4125],[20.60917, 56.3915],[20.608, 56.352],[20.61283, 56.3245],[20.61917, 56.30233],[20.61217, 56.27283],[20.61033, 56.24083],[20.6075, 56.2155],[20.60833, 56.195],[20.6165, 56.15983],[20.64467, 56.10833],[20.649, 56.10767],[21.03333, 56.08333],[24.5, 56.08333],[24.5, 57.89983]]},
    {'name': 'Lithuania',           'ISOcode': 'LT', 'mccode': 193000, 'bordertype': 'T', 'border': [[21.03333, 56.08333],[20.64467, 56.10833],[20.65783, 56.0785],[20.68367, 56.03733],[20.69467, 56.02483],[20.699, 56.00917],[20.69067, 55.989],[20.68467, 55.9545],[20.685, 55.9285],[20.697, 55.87717],[20.7015, 55.831],[20.72667, 55.7845],[20.733, 55.77633],[20.7485, 55.75267],[20.74567, 55.72367],[20.757, 55.69317],[20.77017, 55.63433],[20.76167, 55.5655],[20.748, 55.50433],[20.72417, 55.4495],[20.693, 55.42067],[20.659, 55.3825],[20.95, 55.26667],[21.5, 55.26667],[21.5, 56.08333],[24.5, 56.08333]]},
    {'name': 'Poland',              'ISOcode': 'PL', 'mccode': 167000, 'bordertype': 'T', 'border': [[19.56167, 54.43833],[19.3705, 54.61817],[19.33333, 54.60333],[19.283, 54.58567],[19.23117, 54.57117],[19.19367, 54.56317],[19.16767, 54.56267],[19.15567, 54.60283],[19.1475, 54.6605],[19.1405, 54.67817],[19.12767, 54.70283],[19.097, 54.73983],[19.054, 54.77567],[19.01517, 54.80067],[19.002, 54.80883],[18.9795, 54.82567],[18.91317, 54.86567],[18.91367, 54.86533],[18.8515, 54.89717],[18.77783, 54.91967],[18.75667, 54.9255],[18.7095, 54.9425],[18.67533, 54.95367],[18.652, 54.96267],[18.5775, 54.9875],[18.5775, 54.9875],[18.57733, 54.9875],[18.53817, 55.003],[18.5005, 55.01567],[18.463, 55.02617],[18.42367, 55.03417],[18.36783, 55.0435],[18.296, 55.0515],[18.18967, 55.04817],[18.17433, 55.04917],[18.16967, 55.04667],[18.1045, 55.04983],[18.04033, 55.04933],[17.95233, 55.04417],[17.8345, 55.02867],[17.73583, 55.01],[17.63667, 54.99433],[17.55967, 54.98033],[17.492, 54.96383],[17.4835, 54.96117],[17.476, 54.9615],[17.40833, 54.9625],[17.31633, 54.95533],[17.22633, 54.94233],[17.12667, 54.91817],[17.03867, 54.8955],[16.92717, 54.866],[16.87283, 54.844],[16.79917, 54.80567],[16.736, 54.7825],[16.68517, 54.77183],[16.63233, 54.7675],[16.567, 54.7655],[16.49983, 54.7555],[16.449, 54.74467],[16.37783, 54.727],[16.342, 54.71433],[16.30383, 54.699],[16.25183, 54.673],[16.22183, 54.658],[16.17333, 54.6275],[16.1465, 54.606],[16.13367, 54.59367],[16.1135, 54.57233],[16.09983, 54.56067],[16.042, 54.51933],[16.0205, 54.5025],[15.97533, 54.475],[15.90517, 54.47067],[15.80383, 54.468],[15.70217, 54.45217],[15.62483, 54.43083],[15.53467, 54.399],[15.27317, 54.3665],[15.14933, 54.33333],[15.087, 54.31417],[15.08633, 54.30633],[14.95467, 54.28117],[14.81933, 54.24733],[14.69833, 54.23017],[14.57917, 54.20083],[14.48233, 54.17633],[14.41733, 54.16017],[14.36583, 54.14417],[14.3405, 54.1345],[14.20333, 54.12767],[14.24417, 53.98933],[14.228, 53.92933],[20.0, 53.8],[20.0, 54.43833]]},
    {'name': 'Russia',              'ISOcode': 'RU', 'mccode': 190000, 'bordertype': 'T', 'border': [[27.79583, 60.5455],[27.77367, 60.53333],[27.77567, 60.50733],[27.7675, 60.50367],[27.764, 60.49533],[27.76733, 60.48883],[27.75567, 60.4715],[27.74733, 60.46883],[27.74717, 60.45083],[27.6935, 60.43717],[27.68617, 60.43333],[27.725, 60.39133],[27.6165, 60.32433],[27.50383, 60.25433],[27.66883, 60.35683],[27.585, 60.30483],[27.5445, 60.27967],[27.512, 60.25967],[27.46383, 60.22833],[27.30033, 60.20533],[27.23033, 60.20533],[27.18833, 60.17667],[26.965, 60.17667],[26.915, 60.17333],[26.79833, 60.14667],[26.64, 60.11333],[26.54333, 60.10667],[26.34667, 60.0],[26.33583, 59.99467],[26.44, 59.93833],[26.915, 59.63167],[28.09783, 59.5695],[30.36667, 59.56917],[30.36667, 60.77],[27.79583, 60.77]]},
    {'name': 'Kaliningrad, Russia', 'ISOcode': 'RU', 'mccode': 190100, 'bordertype': 'T', 'border': [[20.95, 55.26667],[20.65383, 55.384],[20.64933, 55.36867],[20.6465, 55.367],[20.63067, 55.355],[20.659, 55.3825],[20.63067, 55.355],[20.58383, 55.322],[20.50283, 55.26017],[20.4085, 55.198],[20.35933, 55.1695],[20.282, 55.1625],[20.18117, 55.15833],[20.10667, 55.1565],[19.974, 55.15983],[19.819, 55.13217],[19.6765, 55.04417],[19.637, 54.9935],[19.60933, 54.93967],[19.59567, 54.871],[19.6115, 54.81567],[19.59283, 54.77267],[19.5645, 54.74817],[19.56, 54.7335],[19.49067, 54.68833],[19.42033, 54.63817],[19.4205, 54.63833],[19.3705, 54.61817],[19.56167, 54.43833],[20.0, 54.43833],[21.5, 54.43833]]},
    {'name': 'Sweden',              'ISOcode': 'SE', 'mccode': 177000, 'bordertype': 'T', 'border': [[10.594, 58.76117],[10.59433, 58.75983],[10.64017, 58.51817],[10.6515, 58.48567],[10.67467, 58.45233],[10.8475, 58.26033],[10.96367, 58.042],[10.96383, 58.04167],[10.96533, 58.039],[11.07733, 57.839],[11.078, 57.838],[11.07983, 57.83467],[11.15917, 57.70033],[11.40617, 57.44167],[11.63983, 57.15017],[11.822, 57.027],[11.82233, 57.02683],[11.82533, 57.02483],[11.9265, 56.95817],[12.02233, 56.839],[12.05567, 56.806],[12.09983, 56.77683],[12.22683, 56.70783],[12.3065, 56.6315],[12.3065, 56.63133],[12.30883, 56.62933],[12.29933, 56.63817],[12.215, 56.53633],[12.20817, 56.5275],[12.202, 56.5185],[12.10833, 56.37017],[12.088, 56.30817],[12.08767, 56.30383],[12.36333, 56.21633],[12.667, 56.03617],[12.64117, 55.93467],[12.71883, 55.84367],[12.855, 55.749],[12.8745, 55.7235],[12.8745, 55.57333],[12.62167, 55.4155],[12.63917, 55.33733],[12.63883, 55.30833],[12.67717, 55.25],[12.79483, 55.16667],[12.81733, 55.158],[13.0015, 55.16667],[13.12467, 55.1635],[13.13717, 55.16033],[13.19033, 55.1495],[13.24233, 55.144],[13.2415, 55.14417],[13.3055, 55.138],[13.33233, 55.13717],[13.34617, 55.13667],[13.4665, 55.14483],[13.608, 55.18283],[13.61833, 55.18583],[13.64733, 55.1885],[13.67117, 55.19183],[13.97467, 55.18583],[14.07267, 55.1805],[14.08667, 55.179],[14.122, 55.1765],[14.1575, 55.176],[14.17367, 55.17617],[14.19217, 55.17667],[14.2105, 55.17783],[14.2255, 55.17883],[14.2585, 55.18217],[14.29333, 55.18767],[14.46, 55.31217],[14.694, 55.46467],[14.70983, 55.48817],[14.711, 55.50533],[14.71517, 55.51917],[14.70683, 55.6065],[14.66567, 55.66583],[14.63417, 55.6945],[14.61967, 55.7245],[14.6155, 55.73167],[14.60733, 55.74417],[14.59767, 55.75617],[14.59183, 55.76283],[14.80217, 55.7965],[14.87983, 55.801],[14.9545, 55.80967],[15.02767, 55.82817],[15.04283, 55.83317],[15.111, 55.86283],[15.16483, 55.90067],[15.30833, 55.88917],[15.44133, 55.81],[15.64967, 55.74883],[15.884, 55.77483],[15.889, 55.7765],[15.94367, 55.799],[15.98983, 55.82683],[16.03, 55.856],[16.57483, 56.01883],[16.67417, 56.06283],[16.74167, 56.12533],[17.099, 56.6505],[17.173, 56.72683],[17.1785, 56.73267],[17.18367, 56.73883],[17.2055, 56.7655],[17.21133, 56.773],[17.218, 56.78283],[17.426, 57.1145],[17.43683, 57.13533],[17.44333, 57.15683],[17.44717, 57.17417],[17.49083, 57.2245],[17.524, 57.29233],[17.51183, 57.36217],[17.48733, 57.4105],[17.467, 57.4405],[17.438, 57.46833],[17.25683, 57.61467],[17.248, 57.6035],[17.27783, 57.66033],[17.27467, 57.7215],[17.2395, 57.82683],[17.52483, 58.24283],[17.53667, 58.2635],[17.54417, 58.28467],[17.5735, 58.39883],[18.13133, 58.52933],[18.2745, 58.5795],[18.25017, 58.57017],[18.2525, 58.57117],[18.2585, 58.5735],[18.82667, 58.80017],[18.84183, 58.8065],[18.8595, 58.81483],[18.88617, 58.82817],[18.887, 58.8285],[18.88767, 58.82883],[19.07683, 58.92383],[19.09083, 58.93117],[19.104, 58.939],[19.46, 59.158],[19.72883, 59.25533],[19.81283, 59.2965],[19.87117, 59.3505],[20.01133, 59.54483],[19.08317, 60.19167],[19.10267, 60.23533],[19.15833, 60.37167],[19.19233, 60.5095],[19.1425, 60.555],[19.0245, 60.6035],[18.70017, 60.69183],[18.69483, 60.69317],[18.69367, 60.6935],[18.24167, 60.811],[17.8855, 60.93967],[17.77167, 61.17117],[17.803, 61.22583],[17.80967, 61.2395],[17.81433, 61.25333],[17.88517, 61.508],[17.97083, 61.678],[17.97483, 61.68683],[17.978, 61.69567],[18.06583, 61.97983],[18.16567, 62.1725],[18.16567, 62.1725],[18.16583, 62.17267],[18.29267, 62.41783],[18.39, 62.47033],[18.3995, 62.47567],[18.40867, 62.481],[18.81883, 62.73333],[18.96883, 62.82067],[19.41333, 63.06783],[19.43133, 63.07517],[19.81817, 63.13133],[19.86117, 63.13867],[19.9065, 63.14917],[20.24383, 63.23783],[20.2775, 63.2455],[20.4, 63.33333],[20.69667, 63.485],[20.94, 63.52167],[21.28, 63.61],[21.37833, 63.635],[21.45467, 63.75417],[21.47233, 63.82317],[21.43517, 63.89067],[21.44717, 63.8785],[21.40117, 63.95667],[21.5065, 64.04167],[21.8515, 64.19617],[21.9035, 64.22417],[21.94333, 64.25567],[22.04317, 64.354],[22.0665, 64.38317],[22.07933, 64.4135],[22.08467, 64.43517],[22.08433, 64.47733],[22.06183, 64.52083],[21.95267, 64.6585],[21.822, 64.83717],[21.90967, 64.889],[22.13317, 64.956],[22.831, 65.103],[22.97483, 65.1495],[23.06733, 65.21533],[23.127, 65.28533],[23.6435, 65.32283],[23.69217, 65.3275],[24.137, 65.51233]]}]

baselines = [
    {'name': 'Estonia', 'ISOcode': 'EE', 'bordertype': 'B', 'border': [[28.09783, 59.5695],[27.53667, 59.42833],[27.225, 59.44333],[26.7545, 59.521],[26.36417, 59.8225],[26.36, 59.82167],[25.69967, 59.676],[25.01833, 59.7015],[24.50917, 59.60667],[24.0405, 59.39],[23.3615, 59.30467],[22.86367, 59.088],[22.585, 59.095],[22.05667, 58.94667],[22.045, 58.94167],[22.04333, 58.94],[22.03833, 58.92667],[22.05, 58.92167],[22.13667, 58.89333],[21.90767, 58.52267],[21.80067, 58.51517],[21.76117, 58.3215],[21.76117, 58.321],[21.97333, 57.9575],[22.04083, 57.888],[22.18967, 57.968],[22.81683, 58.15117],[23.20833, 57.81367],[23.2045, 57.80317],[23.20683, 57.79683],[23.21717, 57.78767],[23.227, 57.7855],[23.26217, 57.77867],[23.27383, 57.78],[23.97367, 58.09483],[24.35783, 57.87467]]},
    {'name': 'Denmark', 'ISOcode': 'DK', 'bordertype': 'B', 'border': [[8.38833, 55.06833],[8.40267, 55.20217],[8.4145, 55.329],[8.312, 55.44383],[8.2835, 55.47317],[8.11433, 55.99867],[8.10883, 55.999],[8.11567, 56.37183],[8.1135, 56.374],[8.11367, 56.37267],[8.19483, 56.69667],[8.22333, 56.75517],[10.65583, 57.74467],[10.62733, 57.482],[10.552, 57.22867],[10.33267, 56.9725],[10.32767, 56.96717],[10.292, 56.9545],[10.33367, 56.72183],[10.33833, 56.7015],[10.36317, 56.662],[10.275, 56.562],[10.86467, 56.30167],[10.81067, 56.13467],[10.79267, 55.93433],[10.6755, 55.86633],[10.6215, 55.76467],[10.6165, 55.6205],[10.74767, 55.47683],[10.72683, 55.415],[10.85183, 55.29017],[10.95433, 55.15717],[10.6855, 54.7235],[10.41733, 54.81717],[10.24567, 54.91933],[10.066, 54.8735],[9.98717, 54.85233],[9.94067, 54.81933],[10.86883, 55.74383],[11.08017, 55.91917],[11.22067, 56.07017],[11.67483, 56.2055],[12.31083, 56.12967],[12.59233, 56.05183],[12.61733, 56.05183],[12.629, 56.04333],[12.629, 56.02833],[12.6115, 56.01617],[12.59983, 56.01617],[12.59667, 55.7875],[12.671, 55.78467],[12.84583, 55.69867],[12.76833, 55.67267],[12.7755, 55.67017],[12.815, 55.6205],[12.8225, 55.6005],[12.78417, 55.60467],[12.77333, 55.606],[12.71167, 55.53633],[12.59217, 55.5155],[12.45517, 55.33017],[12.45517, 55.291],[12.52167, 55.008],[12.5375, 54.94483],[12.16583, 54.835],[11.9735, 54.56017],[11.971, 54.55917],[11.8725, 54.55983],[11.51433, 54.59317],[10.95883, 54.836],[11.0155, 54.888],[11.026, 54.91267],[11.133, 55.15967],[11.09233, 55.34683],[11.07317, 55.47417],[11.08067, 55.51517],[10.93383, 55.66333],[10.86883, 55.74383],[10.932, 57.36383],[11.19583, 57.32367],[11.18867, 57.2975],[11.0345, 57.20533],[10.99683, 57.1995],[10.89683, 57.24133],[10.8695, 57.25783],[10.902, 57.35533],[10.932, 57.36383],[15.17417, 55.33083],[15.17483, 55.3305],[15.19083, 55.32367],[15.19167, 55.323],[15.19783, 55.31867],[15.1975, 55.318],[15.19667, 55.31767],[15.18783, 55.31717],[15.1755, 55.323],[15.1745, 55.3245],[15.174, 55.3295],[15.174, 55.33],[15.174, 55.33017],[15.17417, 55.33083]]},
    {'name': 'Finland', 'ISOcode': 'FI', 'bordertype': 'B', 'border': [[27.62, 60.32417],[27.57867, 60.30967],[27.27383, 60.265],[27.03083, 60.23733],[26.2625, 60.16117],[25.79467, 60.04033],[25.136, 60.09067],[24.89517, 60.0355],[24.30617, 59.86833],[23.59167, 59.787],[23.399, 59.74767],[22.97383, 59.74933],[22.41833, 59.71383],[21.5015, 59.675],[20.73917, 59.73617],[19.7855, 59.808],[19.304, 60.15667],[19.13533, 60.30033],[19.13583, 60.30133],[19.399, 60.43167],[19.70933, 60.49783],[20.20867, 60.54017],[20.744, 60.76583],[21.17017, 61.05083],[21.27083, 61.42233],[21.32917, 61.64633],[21.2345, 62.0165],[21.08667, 62.41333],[20.837, 62.7845],[20.73833, 62.96083],[20.58433, 63.23717],[20.78917, 63.42433],[21.14133, 63.45333],[21.744, 63.47483],[22.16217, 63.5285],[22.52333, 63.7515],[22.6235, 63.864],[22.65233, 63.88667],[22.66417, 63.8955],[22.71633, 63.92833],[22.74117, 63.93733],[22.81067, 63.9605],[23.39917, 64.09283],[23.447, 64.333],[24.2525, 64.53783],[24.32267, 64.6815],[24.551, 65.03967],[24.65517, 65.33583],[24.3135, 65.564],[24.03083, 65.59933]]},
    {'name': 'Sweden',  'ISOcode': 'SE', 'bordertype': 'B', 'border': [[10.92, 58.94167],[10.96167, 58.93],[10.96, 58.93],[10.96333, 58.88833],[10.97833, 58.77833],[11.02167, 58.53667],[11.20667, 58.32833],[11.32833, 58.095],[11.43833, 57.895],[11.59167, 57.63667],[11.89667, 57.29667],[12.11, 57.15167],[12.24333, 57.06333],[12.35833, 56.91833],[12.52, 56.83],[12.62333, 56.73],[12.71, 56.64833],[12.54333, 56.45167],[12.44833, 56.30333],[12.88667, 55.52],[12.84167, 55.45333],[12.82667, 55.41667],[12.81333, 55.37833],[12.80667, 55.365],[12.80833, 55.35667],[12.81667, 55.33667],[12.935, 55.37833],[13.05333, 55.375],[13.06133, 55.37483],[13.073, 55.37083],[13.0855, 55.36767],[13.097, 55.373],[13.10933, 55.376],[13.1225, 55.37567],[13.13483, 55.3725],[13.14883, 55.37233],[13.15967, 55.3675],[13.17467, 55.36833],[13.187, 55.3665],[13.20583, 55.36283],[13.22067, 55.35917],[13.23117, 55.354],[13.24383, 55.35233],[13.2555, 55.3495],[13.26833, 55.34583],[13.28067, 55.34283],[13.29333, 55.34217],[13.3085, 55.3405],[13.32417, 55.34183],[13.339, 55.33967],[13.3525, 55.33683],[13.36617, 55.3365],[13.37983, 55.34233],[13.39283, 55.34783],[13.4045, 55.35133],[13.417, 55.35267],[13.42917, 55.35483],[13.44517, 55.36383],[13.45517, 55.3685],[13.4725, 55.37383],[13.4865, 55.37917],[13.50367, 55.38333],[13.52133, 55.38467],[13.53433, 55.38533],[13.54883, 55.38567],[13.56167, 55.38333],[13.57567, 55.38433],[13.58817, 55.3865],[13.60133, 55.388],[13.6075, 55.395],[13.614, 55.40167],[13.623, 55.40833],[13.633, 55.413],[13.64517, 55.41633],[13.65967, 55.41667],[13.674, 55.41617],[13.68733, 55.41667],[13.699, 55.4205],[13.70983, 55.42433],[13.72317, 55.4255],[13.73667, 55.42417],[13.75217, 55.42483],[13.76567, 55.42483],[13.77933, 55.4235],[13.79333, 55.42217],[13.80667, 55.42383],[13.82283, 55.42417],[13.83533, 55.4215],[13.84833, 55.41967],[13.85717, 55.425],[13.87167, 55.4295],[13.88683, 55.43217],[13.90233, 55.43333],[13.91767, 55.43267],[13.93667, 55.4315],[13.9495, 55.429],[13.96117, 55.42567],[13.97433, 55.42133],[13.98633, 55.41683],[13.99817, 55.4105],[14.0095, 55.40467],[14.02633, 55.39617],[14.0365, 55.3915],[14.0465, 55.38617],[14.05667, 55.38017],[14.06867, 55.38267],[14.0825, 55.38383],[14.096, 55.38283],[14.10867, 55.382],[14.12167, 55.38033],[14.13517, 55.37733],[14.14917, 55.37583],[14.16533, 55.37617],[14.18033, 55.37717],[14.19367, 55.37983],[14.204, 55.38483],[14.21283, 55.394],[14.21967, 55.40167],[14.22633, 55.411],[14.23167, 55.41783],[14.2365, 55.42517],[14.24517, 55.43667],[14.25433, 55.44233],[14.266, 55.44633],[14.27417, 55.45233],[14.28183, 55.45933],[14.2855, 55.46767],[14.29367, 55.47383],[14.30283, 55.47933],[14.31383, 55.4835],[14.32183, 55.49017],[14.33017, 55.49667],[14.33783, 55.50267],[14.35217, 55.50733],[14.3535, 55.51483],[14.35267, 55.52233],[14.358, 55.52967],[14.3625, 55.53783],[14.36267, 55.54567],[14.36583, 55.55317],[14.35667, 55.55833],[14.34733, 55.56367],[14.34333, 55.57183],[14.33967, 55.57983],[14.33533, 55.587],[14.325, 55.5915],[14.31517, 55.59783],[14.3045, 55.60483],[14.302, 55.612],[14.289, 55.61783],[14.286, 55.62533],[14.2835, 55.63517],[14.28233, 55.64417],[14.28183, 55.652],[14.28333, 55.66083],[14.27917, 55.668],[14.27333, 55.67467],[14.25917, 55.68017],[14.24667, 55.68233],[14.236, 55.68633],[14.22467, 55.69067],[14.21717, 55.69717],[14.20867, 55.70283],[14.20717, 55.71083],[14.2035, 55.71867],[14.2005, 55.72683],[14.19867, 55.73417],[14.19867, 55.74183],[14.19967, 55.74917],[14.20067, 55.75667],[14.20217, 55.764],[14.204, 55.77267],[14.2055, 55.78],[14.20833, 55.78767],[14.21167, 55.797],[14.215, 55.80517],[14.21717, 55.8125],[14.2215, 55.82067],[14.22517, 55.82833],[14.22917, 55.837],[14.23333, 55.844],[14.23917, 55.852],[14.244, 55.85983],[14.24917, 55.8675],[14.25533, 55.875],[14.26217, 55.882],[14.26883, 55.88833],[14.27783, 55.8955],[14.28683, 55.90067],[14.29783, 55.90517],[14.31033, 55.90983],[14.30667, 55.90667],[14.72333, 55.99333],[14.845, 56.0],[14.86, 56.005],[14.975, 56.11],[15.47833, 56.08],[15.70167, 55.94667],[15.70667, 55.94833],[15.79333, 56.01167],[16.405, 56.195],[16.76667, 56.73333],[16.85, 56.82],[16.87167, 56.84667],[17.07667, 57.17833],[17.08667, 57.22833],[17.155, 57.30833],[17.13, 57.35667],[16.83167, 57.595],[16.90667, 57.685],[16.85167, 57.84333],[17.16667, 58.31],[17.22167, 58.535],[17.97333, 58.71167],[17.975, 58.71333],[18.02333, 58.73167],[18.59, 58.95833],[18.61667, 58.97167],[18.805, 59.06667],[19.19333, 59.30667],[19.50167, 59.41833],[19.645, 59.62],[19.46333, 59.73833],[19.37333, 59.79333],[19.09667, 59.89333],[18.86167, 60.04],[18.91667, 60.22167],[18.92, 60.24],[18.925, 60.27667],[18.82833, 60.42833],[18.50333, 60.51667],[18.02167, 60.64167],[17.52167, 60.82167],[17.34333, 61.175],[17.40167, 61.27833],[17.47167, 61.54333],[17.56, 61.72333],[17.64667, 62.01667],[17.74833, 62.21833],[17.89667, 62.51167],[18.06, 62.6],[18.47167, 62.855],[18.625, 62.945],[19.09, 63.205],[19.2, 63.25167],[19.68167, 63.32167],[20.03, 63.41333],[20.74333, 63.575],[20.78667, 63.58833],[20.925, 63.67333],[20.93667, 63.68333],[21.02, 63.81],[21.01667, 63.81333],[20.915, 63.98333],[21.135, 64.16167],[21.52, 64.335],[21.61833, 64.43333],[21.62333, 64.455],[21.51, 64.595],[21.30333, 64.87],[21.56833, 65.03167],[21.89, 65.12833],[22.61667, 65.28167],[22.77, 65.46333],[23.56167, 65.52],[23.95333, 65.58667]]}]

def isInsideBorder(aPoint, aBorder):
#==================================}
# Checks if aPoint is inside area surrounded by aBorder
# All points ([x, y]) are geographical longitudes (x) and latitudes (y)

    xp = aPoint[0]
    yp = aPoint[1]
    
    aBrdr = aBorder.copy()
    if aBrdr[-1] != aBrdr[0]:
        aBrdr.append(aBrdr[0])
    lon = [p[0] for p in aBrdr]
    lat = [p[1] for p in aBrdr]
    minlon = min(lon)
    maxlon = max(lon)
    minlat = min(lat)
    maxlat = max(lat)
        
    over = 0
    if xp >= minlon and xp <= maxlon and yp >= minlat and yp <= maxlat:
    # point is inside boundingbox, so have to check if it is inside the polygon
        for i in range(len(aBrdr) - 1):
            ex = min(lon[i], lon[i + 1])
            lx = max(lon[i], lon[i + 1])
            ey = min(lat[i], lat[i + 1])
            ly = max(lat[i], lat[i + 1])
            ix = 0
            if ey <= yp < ly:
                if xp <= ex:
                    ix = 1
                else:
                    if xp <= lx:
                        if lat[i + 1] == lat[i]:
                            ix = 1
                        else:
                            kk = (lon[i + 1] - lon[i])/(lat[i + 1] - lat[i])
                            x = lon[i] + kk*(yp - lat[i])
                            if (x - xp) >= 0.0:
                                ix = 1
            over = over + ix
        
    if over > 0 and over % 2 != 0:
        return True
    else:
        return False

def gsw_Baltic(lon, lat):
#========================
    if (12.6 <= lon <= 32 and 53 <= lat <= 66):
        return True
    elif 7 < lon < 12.6 and 50 < lat < 59:
        return True         
    else:
        return False
    
def in_which(aPoint, borders, par, def_val):
#===========================================
    for b in borders:
        if isInsideBorder(aPoint, b['border']):
            return b[par]
    return def_val


def getFMIHelcomAreaCode(aPoint):
#================================
# This code returns the HELCOM-area of aPoint [lon,lat]
    return in_which(aPoint, BalticSeaAreas, 'code', '')

def getMyCruiseHelcomAreaCode(aPoint):
#=====================================
# This code returns the HELCOM-area of aPoint [lon,lat]
    return in_which(aPoint, BalticSeaAreas, 'mccode', '')

def getSeaAreaName(aPoint):
#==========================
# This code returns the name of the sea area of aPoint [lon,lat]
    return in_which(aPoint, BalticSeaAreas, 'name', '')

def getHelcomAreaAndBasinNames(aPoint):
#======================================
# This code returns the HELCOM-area code of aPoint [lon,lat]
    result = ''
    for area in BalticSeaAreas:
        if isInsideBorder(aPoint,area['border']) == True:
            result = f"{area['name']}, {area['basin']}"
            break
    return result

def getBalticSeaMainAreaName(aPoint):
#====================================
# This code returns the HELCOM-area code of aPoint [lon,lat]
    return in_which(aPoint, BalticSeaMainAreas, 'basin', '')

def whosEconomicZone(aPoint):
#============================
# This code returns the country of the economic zone of aPoint [lon,lat]
    return in_which(aPoint, economiczones, 'name', '')

def whosTerritorialWater(aPoint):
#================================
# This code returns the country of the economic zone of aPoint [lon,lat]
    return in_which(aPoint, territorialwaters, 'name', '')

def whosBaseline(aPoint):
#========================
# This code returns the country of the economic zone of aPoint [lon,lat]
    return in_which(aPoint, baselines, 'name', '')

def getMyCruiseCountryCode(aPoint):
#==================================
# This code returns the country of the economic zone of aPoint [lon,lat]
    return in_which(aPoint, economiczones, 'mccode', '0')

def gcDistance_nmi(aPoint, bPoint):
#==================================
# Gives distance between points a and b in nautical miles
#
    lo1 = radians(aPoint[0])
    la1 = radians(aPoint[1])
    lo2 = radians(bPoint[0])
    la2 = radians(bPoint[1])

    return round((60*180/pi)*2*asin(sqrt(sin((la1 - la2)/2)*sin((la1 - la2)/2)+cos(la1)*cos(la2)*sin((lo1 - lo2)/2)*sin((lo1 - lo2)/2))),6)

def getStationName(aPoint):
#==========================
    name = ''
    with open('/Users/pekka/PythonOhjelmia/JupyterNotebooks/itameren_ices_asemat.txt','r') as statfile:
        stations = statfile.read().split('\n')
    for station in stations:
        s = station.split(';')
        if gcDistance_nmi(aPoint,[float(s[4]),float(s[3])]) < 1.0:
            name = s[2]
    return name

def get_station_list():
#======================
    import requests
    url = 'https://raw.githubusercontent.com/pekkaalenius/MyCruise/main/asemat.txt'
    result = requests.get(url, allow_redirects=True)
    rd = result.text.split('\n')[:-2]
    station = []
    for r in rd:
        n, la, lo, d, c, s, t, v, y, a = r.split(';')
        station.append({'name': n, 'lat': float(la), 'lon': float(lo), 'depth': int(d), 'country': int(c), 'area': int(s), 'type': t, 'visits': int(v), 'year': int(y), 'years': int(a)})

    return station

